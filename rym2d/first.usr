c-----------------------------------------------------------------------
      subroutine usrdat2
      use mldat
      include 'SIZE'
      include 'TOTAL'
      
      ! ~~~~~ fluid model ~~~~~~~~
      n = 0.5355	    ! power law index
      !la = 0.3217      ! Carreau relaxation factor
      
      udiffi = 4628.0
      udiffz = 4.52E5
      !udiffb = 1315.0     
      
      ! ~~~~~ dimensionality ~~~~~
      !nre = 100.0	    ! Reynolds number
      tsc = 385.8       ! time scaling, sim time units/s
      lsc = 1.0 		! length scaling, sim length units/um
      
      ! ~~~~~ geometry ~~~~~~~~~~~
      !chanm = 0.0      ! middle of the channel
      RR = 0.5          ! radius/half-width of each branch
      th = 0.5236       ! branching angle
      
      Q = 1.0           ! volumetric flow rate
      uml=1.0d0         ! average velocity in lower branch
      umu=1.0d0         ! average velocity in upper branch

	  ! ~~~~~ flags ~~~~~~~~~~~~~~  
      param(1) = 1.0    ! density    
      !param(2) = 1.0    ! constant viscosity
      !param(7) = 1.0    ! constant heat capacity
      
      param(30) = 1.    ! enable uservp()
      param(66) = 0.    ! output format (<0 = ASCII)
      param(67) = 0.    ! restart format 
	  
      return
      end
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      use mldat
      
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      
      integer ieg
      !integer iel = gllel(ieg)
      
      if (ifield.eq.1) then
      if(istep.le.1) then

        udiff = udiffz
        
      else

          udiffn1 = udiffz*shvis(ix,iy,iz,gllel(ieg))
          udiffn2 = udiffi
          
          ! linear interpolation between udiffnn1 and udiffnn2
          plc0 = (udiffn1-udiffn2)*(temp-udiffi)/(udiffz-udiffi) 
          ! do not allow non-positive viscosity          
          if (plc0 .le. -udiffn2) plc0 = -udiffn2 + 10e-6
	      plc=udiffn2+plc0
          udiff = plc
		
      endif
      
      utrans = param(1)
      else
        udiff = 1.0E-04
        utrans=param(7)
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      use mldat
      include 'SIZE'
      include 'TOTAL'
      
      real gc
      real, allocatable, dimension(:,:,:,:) :: gamma	  

      ! strain rate invariants
      common /screv/ ei2(lx1,ly1,lz1,lelt)
     $             , ei3(lx1,ly1,lz1,lelt)
      
      if (allocated(shvis)) deallocate(shvis)
      allocate( gamma  (lx1, ly1, lz1, lelt) )   
      allocate( shvis  (lx1, ly1, lz1, lelt) )
         
      ntot1  = nx1*ny1*nz1*nelv
      
      ! calculate strain rate components
      call stnrinv

      do ieg= 1, nelgt
      if (gllnid(ieg).eq.nid) then
        iel = gllel(ieg)
          
          do K = 1, nz1
           do J = 1, ny1
            do I = 1, nx1
            
              !shear rate
			        gamma(i,j,k,iel)=(0.5*abs(ei2(i,j,k,iel)))**0.5
			  
              gc = gamma(i,j,k,iel)
              if (gc.lt.gm .and. gc .gt. 0.0) then
                gm = gc
              end if
              
            end do
           end do
          end do
          
          do K = 1, nz1
           do J = 1, ny1
            do I = 1, nx1
              
              ! eliminate shear rate .le. 0.0
              if (gamma(i,j,k,iel) .lt. gm) then
                gamma(i,j,k,iel) = gm
              end if
              
              ! variable part of viscosity
              shvis(i,j,k,iel)=(gamma(i,j,k,iel))**(n-1.0)
              
              if (shvis(i,j,k,iel) .le. 0.0) then
               write(89,*) shvis(i,j,k,iel)
              end if
            end do
           end do
          end do
           
      end if
      end do
      
      gm = 1e38
      
      if (mod(istep,iostep).eq.0) then 
        ! output shear rate and variable component of viscosity
        call outpost(vx,gamma,vz,pr,t,'shr')
      endif  
      deallocate(gamma)
      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      use mldat
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      
      if (Y.GT.0.0) then
	      wo = 1.5*umu
        y0 = 23.0+ RR
        upro = (1.0-(abs(y-y0)/RR)**2)
        ydir = -1.0
      else
        wo = ((1.0+2.0*n)/(1.0+n))*uml
        y0 = -24.0 + RR
        upro = (1.0-(abs(y-y0)/RR)**(1.0+1.0/n))
        ydir = 1.0
      endif
      
      ux = wo*upro*cos(th)
      uy = wo*ydir*upro*sin(th)
      uz = 0.0

      if (Y.GT.0.0) then
        temp=udiffi
      else
        temp=udiffz
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      use mldat
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      if (Y.GT.0.0) then
	      wo = 1.5*umu
        y0 = 23.0+ RR
        upro = (1.0-(abs(y-y0)/RR)**2)
        !write(*,*) "upro = ",upro
        ydir = -1.0
      else
        wo = ((1.0+2.0*n)/(1.0+n))*uml
        y0 = -24.0 + RR
        upro = (1.0-(abs(y-y0)/RR)**(1.0+1.0/n))
        ydir = 1.0
      endif
      
      if (x .lt. -30.0) then
        ux = wo*cos(th)
        uy = wo*ydir*sin(th)
      else
        ux = wo
        uy = 0.0
      endif
      
      uz = 0.0

      if (Y.GT.0.0) then
        temp=udiffi
      else
        temp=udiffz
      endif
      
      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)

      ffx = 0.0
      ffy = 0.0
      ffz = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)

      qvol   = 0.0
      source = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'
c
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      use mldat
      include 'SIZE'
      include 'TOTAL'
c
      return
      end
c-----------------------------------------------------------------------
